== render_htmldoc_pdf

=== Summary

The htmldoc Ruby gem already exists as a Ruby wrapper around htmldoc the command line program.
This Rails plugin takes the gem one step further and lets you run Rails views through htmldoc.

=== Prerequisites

* You'll have to download, compile, and install the htmldoc executable. You can get it from
  {the HTMLDoc website}[http://www.htmldoc.org/]. The latest developer snapshot (1.9.x as of
  this writing) works just fine. If you're on a Windows machine, you can get 1.8 from the Cygwin repos.
* The htmldoc gem. Just <tt>sudo gem install htmldoc</tt>.

=== Installation

  ./script/plugin install git://github.com/mcmire/render_htmldoc_pdf.git

=== Usage

Let's say you have a controller named <tt>FooController</tt>, and a view named <tt>bar.rhtml</tt>,
and you want to render that view through htmldoc to generate a PDF file. The first thing you
have to do is rename the view so it has an <tt>.rpdf</tt> extension. The <tt>.rpdf</tt> extension
is special and tells Rails that we'll be sending the view through a custom renderer class. Next,
as the very last command in your +bar+ action, you use the <tt>render_pdf</tt> method that the
plugin provides; it looks very similar to Rails' +render+ method.

Enough talk, here's some code:

  # bar.rpdf
  <p>Blah blah blah</p>

  # controller
  class FooController < ApplicationController
    def bar
      @some_variable = "some value"
      # ... anything else you need ...
      render_pdf :url => {:action => 'bar.rpdf'}
    end
  end

Note that you can pass other options to <tt>render_pdf</tt> to control things like whether or
not a download box comes up, etc. See <tt>lib/mcmire/render_htmldoc_pdf/controller.rb</tt> for
documentation.

== Known Issues

* Currently ERB blows up if you try to render a partial within an <tt>rpdf</tt> file. So don't do that.
* Admittedly, that you have to name your views with a .rpdf extension is dumb; you should be able
  to just say e.g. render :action => 'bar', :format => 'pdf' or something.

== Author

(c) 2008 Elliot Winkler (elliot dot winkler at gmail dot com). Released under the MIT license.